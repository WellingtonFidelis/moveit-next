{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/tom/Documents/Projects/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/tom/Documents/Projects/moveit-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport challenges from \"../../challenges.json\";\nimport { LevelUpModal } from \"../components/LevelUpModal\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _Number, _Number2, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_Number = Number(rest.level)) !== null && _Number !== void 0 ? _Number : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_Number2 = Number(rest.currentExperience)) !== null && _Number2 !== void 0 ? _Number2 : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var experinceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set(\"level\", String(level));\n    Cookies.set(\"currentExperience\", String(currentExperience));\n    Cookies.set(\"challengesCompleted\", String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    console.log(isLevelUpModalOpen);\n    setIsLevelUpModalOpen(true);\n    console.log(isLevelUpModalOpen);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio(\"/notification.mp3\").play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio o/\", {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experinceToNextLevel) {\n      finalExperience = finalExperience - experinceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      experinceToNextLevel: experinceToNextLevel,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"3dKNKpLqpRnwPYu96dFr1sF6tu4=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/tom/Documents/Projects/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","Number","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experinceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","console","log","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport challenges from \"../../challenges.json\";\nimport { LevelUpModal } from \"../components/LevelUpModal\";\n\ninterface Challenge {\n  type: \"body\" | \"eye\";\n  description: string;\n  amount: number;\n}\n\ninterface ChallengesContextData {\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n  experinceToNextLevel: number;\n  activeChallenge: Challenge;\n  levelUp: () => void;\n  startNewChallenge: () => void;\n  resetChallenge: () => void;\n  completeChallenge: () => void;\n  closeLevelUpModal: () => void;\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode,\n  level: number,\n  currentExperience: number,\n  challengesCompleted: number,\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({\n  children,\n  ...rest\n}: ChallengesProviderProps) {\n  const [level, setLevel] = useState(Number(rest.level) ?? 1);\n  const [currentExperience, setCurrentExperience] = useState(\n    Number(rest.currentExperience) ?? 0\n  );\n  const [challengesCompleted, setChallengesCompleted] = useState(\n    rest.challengesCompleted ?? 0\n  );\n\n  const [activeChallenge, setActiveChallenge] = useState(null);\n\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\n\n  const experinceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n\n  useEffect(() => {\n    Cookies.set(\"level\", String(level));\n    Cookies.set(\"currentExperience\", String(currentExperience));\n    Cookies.set(\"challengesCompleted\", String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    console.log(isLevelUpModalOpen);\n    setIsLevelUpModalOpen(true);\n    console.log(isLevelUpModalOpen);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n\n    setActiveChallenge(challenge);\n\n    new Audio(\"/notification.mp3\").play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio o/\", {\n        body: `Valendo ${challenge.amount} xp!`,\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const { amount } = activeChallenge;\n\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experinceToNextLevel) {\n      finalExperience = finalExperience - experinceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        currentExperience,\n        challengesCompleted,\n        levelUp,\n        experinceToNextLevel,\n        startNewChallenge,\n        activeChallenge,\n        resetChallenge,\n        completeChallenge,\n        closeLevelUpModal,\n      }}\n    >\n      {children}\n\n      <LevelUpModal />\n\n    </ChallengesContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}