{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tom/Documents/Projects/moveit-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experinceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3');\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio \\o/', {\n        body: \"Valendo \".concat(challenge.amount, \" xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experinceToNextLevel) {\n      finalExperience = finalExperience - experinceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      experinceToNextLevel: experinceToNextLevel,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"mXQLPpEuqfijIicM0DJuMSLmJHY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/tom/Documents/Projects/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experinceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAkE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBAE3CL,QAAQ,CAAC,CAAD,CAFmC;AAAA,MAE9DM,KAF8D;AAAA,MAEvDC,QAFuD;;AAAA,mBAGnBP,QAAQ,CAAC,CAAD,CAHW;AAAA,MAG9DQ,iBAH8D;AAAA,MAG3CC,oBAH2C;;AAAA,mBAIfT,QAAQ,CAAC,CAAD,CAJO;AAAA,MAI9DU,mBAJ8D;AAAA,MAIzCC,sBAJyC;;AAAA,mBAMvBX,QAAQ,CAAC,IAAD,CANe;AAAA,MAM9DY,eAN8D;AAAA,MAM7CC,kBAN6C;;AAQrE,MAAMC,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAEV,KAAK,GAAG,CAAV,IAAgB,CAAzB,EAA4B,CAA5B,CAA7B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAmB;AACfZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASc,iBAAT,GAA6B;AACzB,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV;;AAEA,QAAIT,YAAY,CAACU,UAAb,KAA4B,SAAhC,EAA2C;AACvC,UAAIV,YAAJ,CAAiB,kBAAjB,EAAqC;AACjCW,QAAAA,IAAI,oBAAaH,SAAS,CAACI,MAAvB;AAD6B,OAArC;AAGH;AACJ;;AAED,WAASC,cAAT,GAA0B;AACtBjB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASkB,iBAAT,GAA8B;AAC1B,QAAI,CAACnB,eAAL,EAAsB;AAClB;AACH;;AAHyB,QAKnBiB,MALmB,GAKTjB,eALS,CAKnBiB,MALmB;AAO1B,QAAIG,eAAe,GAAGxB,iBAAiB,GAAGqB,MAA1C;;AAEA,QAAIG,eAAe,IAAIlB,oBAAvB,EAA6C;AACzCkB,MAAAA,eAAe,GAAGA,eAAe,GAAGlB,oBAApC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAACuB,eAAD,CAApB;AACAnB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,iBAAiB,EAAjBA,iBAFG;AAGHE,MAAAA,mBAAmB,EAAnBA,mBAHG;AAIHS,MAAAA,OAAO,EAAPA,OAJG;AAKHL,MAAAA,oBAAoB,EAApBA,oBALG;AAMHM,MAAAA,iBAAiB,EAAjBA,iBANG;AAOHR,MAAAA,eAAe,EAAfA,eAPG;AAQHkB,MAAAA,cAAc,EAAdA,cARG;AASHC,MAAAA,iBAAiB,EAAjBA;AATG,KADX;AAAA,cAaK1B;AAbL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\nimport challenges from '../../challenges.json';\n\ninterface Challenge {\n    type: 'body' | 'eye',\n    description: string,\n    amount: number,\n}\n\ninterface ChallengesContextData {\n    level: number,\n    currentExperience: number,\n    challengesCompleted: number,\n    experinceToNextLevel: number,\n    activeChallenge: Challenge;\n    levelUp: () => void,\n    startNewChallenge: () => void,\n    resetChallenge: () => void,\n    completeChallenge: () => void,\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider ({ children }:ChallengesProviderProps){\n\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0);\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const experinceToNextLevel = Math.pow(( level + 1 ) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, []);\n\n    function levelUp() {\n        setLevel(level + 1);\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n\n        setActiveChallenge(challenge);\n\n        new Audio('/notification.mp3');\n\n        if (Notification.permission === 'granted') {\n            new Notification('Novo desafio \\o/', {\n                body: `Valendo ${challenge.amount} xp!`\n            });\n        }\n    }\n\n    function resetChallenge() {\n        setActiveChallenge(null);\n    }\n\n    function completeChallenge () {\n        if (!activeChallenge) {\n            return;\n        }\n\n        const {amount} = activeChallenge;\n\n        let finalExperience = currentExperience + amount;\n\n        if (finalExperience >= experinceToNextLevel) {\n            finalExperience = finalExperience - experinceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n    }\n\n    return (\n        <ChallengesContext.Provider\n            value={{\n                level,\n                currentExperience,\n                challengesCompleted,\n                levelUp,\n                experinceToNextLevel,\n                startNewChallenge,\n                activeChallenge,\n                resetChallenge,\n                completeChallenge,\n            }}\n        >\n            {children}\n        </ChallengesContext.Provider>\n           )\n}\n"]},"metadata":{},"sourceType":"module"}